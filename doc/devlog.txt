TEAM: NSA_Advice
Members: William Lin, David Sontag, Hilary Zen, Tyler Huang

williamL -- 2019-11-20 8:49
- updated the design doc to show what front-end framework we're using
- cleared up some ambiguity in variable naming and placeholders

tylerH -- 2019-11-20 8:50
- created app.py file and added requirements.txt file
- added the root function and home function
- added login route and register route
- edited index html to have get the form action

williamL -- 2019-11-20 9:10
- updated README to include APIs used and instructions on how to run the program
- created and formatted the landing page

hilaryZ -- 2019-11-21 4:52
- Although the industry looks for “detached” programmers to enjoy being left alone to be creative, they are very attached to the programs they write. Our code often becomes an extension of themselves, and when there are errors we blame them on other factors, or even ignore them completely.
- Open, shared programming > secretive, possessive programming
- The article explained very clearly why it can be so difficult to ask for help and debug code in groups. We were shocked by the examples throughout the text that showed how new programmers working together could quickly surpass others who worked alone, even though they had years of experience.
- We learned that it isn’t enough to just have one person check code, since they also become attached to the debugging work they have done. To be most effective, even though all of us are focusing on separate areas of the application, we will review all the code written each day, making sure that we understand it and checking for errors or things that could be done better.
- We will also work on not viewing our errors as a reflection of our programming ability. When reviewing code, we will make sure to give constructive feedback and think of concrete solutions together, rather than simply pointing out errors and leaving each other to struggle alone.

tylerH -- 2019-11-21 9:10
- deleted login and register route and combined them into a single auth route

tylerH -- 2019-11-21 11:20
- deleted auth route and added the login and register routes

tylerH -- 2019-11-21 2:20
- added auth route to check register and login credentials

tylerH -- 2019-11-21 18:20
- worked on auth route to add credentials to database.
- added a function to get the length of any table.
- worked on auth route to login to the website
- added error flashing to login.html, register.html and index.html
- worked on logout route

hilaryZ -- 2019-11-22 3:12
- set up the keys.txt file for users to add their API keys
- the login function reads in the text and adds the key to the user's session
- if there is no key, the site flashes an error message (the error currently flashes when the user logs out, still working on flashing it on their homepage as soon as they log in)

tylerH -- 2019-11-22 9:08
- added a bug fix to logout route

tylerH -- 2019-11-22 10:08
- added new table to database
- added to the auth route to add more user info to database
- edited register.html to have more fields to input information
- edited login.html forms to require the fields
- added function to get user info from info table
- edited homepage.html to display user info

tylerH -- 2019-11-23 20:08
- added a new html page to update a user's info
- added update route to render the update info page
- added a link to homepage to allow user's to update their info
- updated auth route to update user info
- changed the way to update information in auth route by using a while loop instead of hard coding


williamL -- 2019-11-25 9:24
HOME STRETCH PLAN

Things left to do:
- Get and display info from APIs
    - use a lot of css

2019-11-26
  - william
      - update about and howToUse pages
  - coby
      - figure out twitter and google civic APIs
  - tyler
      - fix what data is displayed at home page
  - hilary
      - css for home page

2019-11-27
  - william
      - add openWeather API info
  - coby
      - implement the twitter and google civic APIs into the website
  - tyler
      - fix the update info section to already have current info
  - hilary
      - css for register and login pages

2019-11-28
  - william
      - add css to about and howToUse pages
  - coby
      - look into more APIs possibly
  - tyler
      - add css
  - hilary
      - add css

tylerH -- 2019-11-26 9:00
  - added a button to homepage to redirect user's to check the weather of their location
  - added a route to display the weather of the location
  - added 404 error handling to weather route

  williamL -- 2019-11-20 9:24
    - create the "About" and "How to Use" pages along with navbars for every page
        - filled in info for both page

tylerH -- 2019-11-27 8:50
  - worked on moving fuctions in app.py to db.py

williamL -- 2019-11-26 9:24
  - create the "About" and "How to Use" pages along with navbars for every page
      - filled in info for both page

williamL -- 2019-11-26 9:24
  - create the "About" and "How to Use" pages along with navbars for every page
      - filled in info for both page

williamL -- 2019-11-27 9:01
  - created contact footer

cobyS -- 2019-11-27 9:07
    Oh boy I owe a lot of devlogging...
    - Added all db functionality in app.py into db.py as a helper database.
        - Tried to simplify opening DB and cursor into function, ran into unresolved issues with storing the DB variable globally
    - Adding API functions to api.py as a helper function
    - Added IPs to our DB, in db.py functions and reset.py
    Older updates: FullContact API works but returns disappointing amounts of data, Twitter works if we have website for callbacks

williamL -- 2019-11-27 17:32
  - formatted info from openweather api to display weather nicely

tylerH -- 2019-12-02 8:50
  - worked on adding getting api key function
  - added new table to store api keys

tylerH -- 2019-12-02 18:50
  - added an address field to update form and table of users
  - added field to add api keys
  - added a way to show address
  - added a new html page for users to either update an existing api key or add a new key

williamL -- 2019-12-02 22:07
  - got the google civic api key to work
  - created an option on the home page to check civic information given that an address is entered
  - created page to return elections near address
  - created page to return representatives near address

tylerH -- 2019-12-02 23:00
  - added a way for api calls to check for api keys before making the calls

hilaryZ -- 2019-12-03 3:!5
  - styled the homepage, as well as the forms for login, register, and updating info
  - information about getting API keys is only shown if user is missing that key

cobyS -- 2019-12-03 8:22
  - added numerous comments to app.py to describe routes
  - added a map to the homepage with hard coded coordinates (for now)

williamL -- 2019-12-02 15:02
  - got Location IQ and Google Place APIs to start working
  - created a page that shows you cafes near the address
  - fixed map to show current address
  - added maps key everywhere

tylerH -- 2019-12-03 08:50
  - removed phoneNum and email from app
  - removed fullcontact from app

tylerH -- 2019-12-03 19:00
  - worked on drop down menu so values could be sent to flask app

williamL -- 2019-12-03 19:30
  - created dropdown menu for places nearby
  - updated the 'About' and 'How To Use' pages
